const{Doodoo:Doodoo,MIDI_NOTES:MIDI_NOTES}=doodooLib;function Composition(t,e){const o=this;let n,{MIDI_NOTES:a}=t;this.tonic=e.tonic,this.bpm=e.bpm,this.samples=e.samples,this.scale=e.scale,this.title=e.title,this.startDuration=e.startDuration,this.parts=[],this.init=function(){for(let t=0;t<this.scale.length;t++){let e=new UINumberStep({value:o.scale[t],min:-11,max:11,callback:e=>{o.scale[t]=e}});o.panel.scaleRow.append(e,t)}},this.play=function(e){if(0===o.parts.length)return alert("Add notes to the melody.");o.update(),n&&(n.stop(),Tone.Transport.cancel());const a=o.get();n=new Doodoo({...a,withRecording:e,onMutate:e=>{t.ui.faces.mutationCount.text="Mutation: "+e}}),n.play(),t.fio.saveLocal(a)},this.stop=function(){n&&n.stop()},this.mutate=function(){n&&n.mutate()},this.update=function(){o.parts=[];let e=!1;const n=o.panel.melody.children,a=Array.from(n).map((t=>{let o,n=t.note.value,a=t.duration.value;return["null","rest"].includes(n)?o=null:(o=function(t){if(1===t.length||t.length>3)return!1;let e=t[0].toUpperCase(),o=t[t.length-1],n=t.includes("#")?"#":"";return!(isNaN(+o)||!"ABCDEFG".includes(e))&&e+n+o}(n),o||(e=!0)),a.length>3&&(e=!0),isNaN(+a[0])&&(e=!0),1===a.length&&(a+="n"),[o,a]}));if(e)return alert("use notes in MIDI format like C4 or C#4, durations like 1n, 2n, 4n, 8n, etc.");o.parts=a;const i=o.get();t.fio.saveLocal(i)},this.addNote=function(t,e,n){let a=t||o.panel.melodyInput.noteInput.value,i=e||o.panel.melodyInput.durationInput.value,s=new UICollection({class:"note-collection"}),l=new UIText({value:a}),c=new UIText({value:i}),r=new UIButton({text:"X",callback:()=>{o.panel.melody.remove(s)}});s.append(l,"note"),s.append(c,"duration"),s.append(r),o.panel.melody.append(s),n||o.update()},this.clear=function(){o.panel.melody.clear()},this.get=function(){return{parts:o.parts,tonic:o.tonic,bpm:o.bpm,samples:this.samples,title:this.title,startDuration:this.startDuration,scale:this.scale}},this.load=function(e){var n;if(e.title&&t.ui.faces.title.update(e.title),e.bpm&&t.ui.faces.bpm.update(e.bpm),e.tonic&&t.ui.faces.tonic.update("string"==typeof e.tonic?e.tonic:(n=e.tonic,a[n])),e.startDuration&&t.ui.faces.startDuration.update(e.startDuration),e.scale)for(let t=0;t<e.length;t++)o.panel.scaleRow[t].update(e.scale[t]);e.parts&&(o.clear(),o.parts=[],e.parts.forEach((t=>{if(null===t)return o.addNote("rest",e.startDuration,!0);const n="string"==typeof t?t:t[0],a="string"==typeof t?e.startDuration:t[1];null===n?o.addNote("rest",a,!0):o.addNote(n,a,!0)}))),o.update()}}function FilesIO(t){this.load=function(e){t.composition.load(e)},this.saveLocal=function(t){localStorage.setItem("comp",JSON.stringify(t))},this.clear=function(){t.composition.clear(),localStorage.setItem("comp","")},this.saveFile=function(){t.composition.update();const e=localStorage.getItem("comp"),o=new Blob([e],{type:"application/x-download;charset=utf-8"});saveAs(o,prompt("Name composition",composition.title)+".json")}}window.addEventListener("load",(function(){const t={};t.MIDI_NOTES=MIDI_NOTES;const e={title:"Doodoo_"+(new Date).toDateString().replace(/ /g,"-"),tonic:"C4",scale:[0,2,4,5,7,9,11],startDuration:"4n",bpm:120,samples:"../samples/choir/"};t.composition=new Composition(t,e),t.ui=new Interface(t),t.ui.settings=new Settings(t,"doodoo"),t.fio=new FilesIO(t),t.ui.load("./interface.json",(()=>{t.ui.settings.load();const e=localStorage.getItem("comp")?JSON.parse(localStorage.getItem("comp")):{};t.composition.load(e),t.composition.init()})),console.log(t)}));
//# sourceMappingURL=src_maps/composer.min.js.map
